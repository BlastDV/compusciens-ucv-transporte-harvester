/*******************************************************************
$Header: C:/Symbol/Csp32Proj/Csp32/src/vcs/Csp32.cpv  1.0  05 Mar 1999  10:00:00 kFallon $
 *
 * © Copyright 1999 Peninsula Solutions, Inc., all rights reserved.
 * © Copyright 1999 Symbol Technologies, Inc., all rights reserved.
 *
 *          ***************************************
 *          * This file was generated by:         *
 *          *       Peninsula Solutions, Inc.     *
 *          *       1265 S. Semoran Blvd.         *
 *          *       Suite 1247                    *
 *          *       Winter Park, FL 32792         *
 *          *       Phone: (407) 673-6544         *
 *          *       Fax:   (407) 673-6545         *
 *          * E-mail: info@PeninsulaSolutions.com *
 *          *                                     *
 *          * under a grant from:                 *
 *          *       Symbol Technologies, Inc.     *
 *          *       Holtsville, NY                *
 *          ***************************************
 *
 * The user is granted a license to use and modify this file for their own
 * purposes so long as the Copyright information remains intact.
 *
 *    MODULE NAME:   Csp32.cpp
 *
 *    DESCRIPTION:
 *                   This file provides the user API interface
 *                   functions for Symbol's Consumer Scanning
 *                   Products as Dynamic Link Library. When
 *                   compiled into a DLL, the user can access
 *                   all of the functions available for the
 *                   Symbol CyberPen.
 *
 *    AUTHOR:        Kim Fallon
 *
 *    DATE CREATED:  03/05/99
 *
 *    HISTORY:
 *
 *       03/05/99    Initial Development
 *
$Log: C:/Symbol/Csp32Proj/Csp32/src/vcs/Csp32.cpv $
 *******************************************************************/
/*******************************************************************
 * MODIFICACIONES HECHAS POR PERSONAL DE COMPUSCIENS (www.compusciens.org.ve)
 *
 * TODO EL TRABAJO FUE DESARROLLADO ORIGINALMENTE POR EL O LOS PARTICIPANTES
 * ESPECIFICADOS EN LA NOTA SUPERIOR A ESTA.
 *
 * PROYECTO TRANSPORTE UCV - 19/06/2014
 *
 ******************************************************************/

#ifndef CSP32BRIDGE_H
#define CSP32BRIDGE_H

#include <QObject>

// Nota sobre las siguientes 2 librerias, es probable
// que Qt proporcione soporte interno para esto, pero quedara
// para futuras revisiones su implementacion
#include <windows.h> // Para que Wsc funcione porque define algunos tipos encontrados aca
#include <Wsc.h>

class Csp32Bridge : public QObject
{
    Q_OBJECT
public:
    explicit Csp32Bridge(QObject *parent = 0);

    // General
    void cspInitParms ();

    // Comunicaciones
    int cspInit(int nComPort); // Para abrir comunicacion con el lector
    int cspRestore();

    // Variables de control y demas
    int nCspActivePort;
    int nCspDeviceStatus;
    int nCspProtocolVersion;
    int nCspSystemStatus;
    int nCspStoredBarcodes;

signals:

public slots:

};

#endif

/* Fragmento tomado y modificado de la libreria original Csp32,
 * provista por el SDK del lector. */
/*******************************************************************
 *              Communications setup section...                    *
 *******************************************************************/
#ifndef COM1
    #define COM1                    ((int) 0)
    #define COM2                    ((int) 1)
    #define COM3                    ((int) 2)
    #define COM4                    ((int) 3)
    #define COM5                    ((int) 4)
    #define COM6                    ((int) 5)
    #define COM7                    ((int) 6)
    #define COM8                    ((int) 7)
    #define COM9                    ((int) 8)
    #define COM10                   ((int) 9)
    #define COM11                   ((int)10)
    #define COM12                   ((int)11)
    #define COM13                   ((int)12)
    #define COM14                   ((int)13)
    #define COM15                   ((int)14)
    #define COM16                   ((int)15)
#endif
/*******************************************************************
 *              Th, Th, Th, Th, That's All Folks !                 *
 *******************************************************************/

// Valores de Retorno de los distintos estados
#ifndef STATUS_OK
    #define STATUS_OK                   ((int) 0)
    #define COMMUNICATIONS_ERROR        ((int)-1)
    #define BAD_PARAM                   ((int)-2)
    #define SETUP_ERROR                 ((int)-3)
    #define INVALID_COMMAND_NUMBER      ((int)-4)
    #define COMMAND_LRC_ERROR           ((int)-7)
    #define RECEIVED_CHARACTER_ERROR    ((int)-8)
    #define GENERAL_ERROR               ((int)-9)
    #define FILE_NOT_FOUND              ((int) 2)
    #define ACCESS_DENIED               ((int) 5)
#endif

// Valor del estado del dispositivo Csp
#define NO_ERROR_ENCOUNTERED        ((int)-6)

#define MAXTIME                     ((int)  18)    // 18 ticks, ~ 1 segundo
#define MAXSIZE                     ((int)4096)    // tamaño maximo de los codigos leidos
#define RX_QUE_SIZE                 ((int)1024)    // communications RX buffer setting
#define TX_QUE_SIZE                 ((int) 512)    // communications Tx buffer setting
